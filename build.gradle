plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
}

checkstyle {
    toolVersion = '10.2'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

apply plugin: 'checkstyle'

group = 'com.whahn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-lang3'
    // implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task checkstyle(type: Checkstyle) {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    source 'src/main/java/'
    include '**/*.java'
    showViolations true
    classpath = files()
    ignoreFailures = false
    maxWarnings = 0
}
